{"version":3,"sources":["components/Nav/Nav.js","utils/API.js","components/Card/Card.js","pages/menu/menu.js","components/Modal/modal.js","pages/admin/admin.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","href","React","Component","API","getBeers","axios","get","getStock","getBeer","id","updateBeer","data","put","deleteBeer","delete","saveBeer","beerInfo","post","Card","props","children","Menu","state","beers","loadBeers","console","log","_this","then","res","setTimeout","updateBeerState","bind","catch","err","setState","this","Grid_default","length","Row_default","map","beer","Col_default","md","Card_Card","breweryName","beerName","style","abv","ibu","Modal","type","data-toggle","data-target","buttonName","tabindex","role","aria-labelledby","aria-hidden","modalTitle","data-dismiss","aria-label","htmlFor","value","name","onChange","handleChange","placeholder","onClick","handleClick","Admin","inStock","handleInputChange","event","_event$target","target","Object","defineProperty","addBeer","status","toggleState","instock","editBeer","_id","filter","filterVal","newBeers","sort","dynamicSort","property","sortOrder","substr","b","localeCompare","_this2","modal_Modal","checked","ButtonToolbar_default","Button_default","bsStyle","App","BrowserRouter","components_Nav_Nav","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.486a67a7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Generic navbar for top of all pages\r\nclass Nav extends React.Component {\r\n  render () {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"col-md-4\">\r\n          <h1>\r\n            <a className=\"text-white\" href=\"/\">Beer Menu</a>\r\n          </h1>\r\n        </div>\r\n        <div className=\"col-md-4\"></div>\r\n        <div className=\"col-md-4\">\r\n          <a href=\"/menu\" className=\"navbar-brand\">Menu</a>\r\n          <a href=\"/admin\" className=\"navbar-brand\">Admin</a>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Nav;","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all beers\r\n  getBeers: function() {\r\n    return axios.get(\"/api/beers\");\r\n  },\r\n  // Gets stock\r\n  getStock: function() {\r\n    return axios.get(\"/api/beers/stock\");\r\n  },\r\n  // Gets the beer with the given id\r\n  getBeer: function(id) {\r\n    return axios.get(\"/api/beers/\" + id);\r\n  },\r\n  // Update beer info with given id\r\n  updateBeer: function(id, data) {\r\n    return axios.put(\"/api/beers/\" + id, data);\r\n  },\r\n  // Deletes the beer with the given id\r\n  deleteBeer: function(id) {\r\n    return axios.delete(\"/api/beers/\" + id);\r\n  },\r\n  // Saves a beer to the database\r\n  saveBeer: function(beerInfo) {\r\n    return axios.post(\"/api/beers\", beerInfo);\r\n  }\r\n};","import React from \"react\";\r\n\r\n// Generic bootstrap card\r\nexport const Card = (props) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-body\">\r\n      {props.children}\r\n    </div>\r\n  </div>\r\n);\r\n","import React, {Component} from \"react\";\r\nimport API from \"../../utils/API\"\r\nimport Grid from \"react-bootstrap/lib/Grid\";\r\nimport Row from \"react-bootstrap/lib/Row\";\r\nimport Col from \"react-bootstrap/lib/Col\";\r\nimport {Card} from \"../../components/Card\";\r\n\r\nclass Menu extends Component {\r\n  state = {\r\n    beers: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadBeers();\r\n  };\r\n\r\n  // function to load all beers\r\n  loadBeers = () => {\r\n    console.log(typeof this.state.beers);\r\n    console.log(\"typeof above\")\r\n    API.getStock()\r\n      .then(res => {\r\n        setTimeout(this.updateBeerState.bind(null,res.data), 0);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  updateBeerState = (data) => {\r\n    this.setState({ beers: data });\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <Grid>\r\n          {this.state.beers.length ? (\r\n            <Row>\r\n              { this.state.beers.map( beer => (\r\n                <Col md={12}>\r\n                  <Card>\r\n                    <Row>\r\n                      <Col md={3} className=\"breweryName\">\r\n                        {beer.breweryName}\r\n                      </Col>\r\n                      <Col md={3} className=\"beerName\">\r\n                        <h6>\r\n                          {beer.beerName}\r\n                        </h6>  \r\n                      </Col>\r\n                      <Col md={2} className=\"style\">\r\n                        {beer.style}\r\n                      </Col>\r\n                      <Col md={2} className=\"abv\">\r\n                        {beer.abv}\r\n                      </Col>\r\n                      <Col md={2} className=\"ibu\">\r\n                        {beer.ibu}\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          ) : (\r\n            <h3> No Beers Listed -- Please check with the Bartender. </h3>\r\n          )}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\n// import Button from \"react-bootstrap/lib/Button\";\r\n// import OverlayTrigger from \"react-bootstrap/lib/OverlayTrigger\";\r\n// import Popover from \"react-bootstrap/lib/Popover\";\r\n// import Tooltip from \"react-bootstrap/lib/Tooltip\";\r\n\r\n\r\n// Generic modal for popups\r\nexport const Modal = (props) => (\r\n  <div>\r\n    <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n      {props.buttonName}\r\n    </button>\r\n      \r\n\r\n    <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">{props.modalTitle}</h5>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form id=\"inputLoc\">\r\n              <label htmlFor=\"breweryName\">Brewery Name: </label>\r\n              <input\r\n              id=\"breweryName\"\r\n              type=\"text\"\r\n              value={props.breweryName}\r\n              name=\"breweryName\"\r\n              onChange={props.handleChange}\r\n              placeholder= \"eg. Awesome Breweries\"\r\n              />\r\n              <br/>\r\n              <label htmlFor=\"beerName\">Beer Name: </label>\r\n              <input\r\n              id=\"beerName\"\r\n              type=\"text\"\r\n              value={props.beerName}\r\n              name=\"beerName\"\r\n              onChange={props.handleChange}\r\n              placeholder= \"eg. Awesome IPA\"\r\n              />\r\n              <br/>\r\n              <label htmlFor=\"style\">Style: </label>\r\n              <input\r\n              id=\"style\"\r\n              type=\"text\"\r\n              value={props.style}\r\n              name=\"style\"\r\n              onChange={props.handleChange}\r\n              placeholder= \"eg. IPA\"\r\n              />\r\n              <br/>\r\n              <label htmlFor=\"abv\">ABV: </label>\r\n              <input\r\n              id=\"abv\"\r\n              type=\"text\"\r\n              value={props.abv}\r\n              name=\"abv\"\r\n              onChange={props.handleChange}\r\n              placeholder= \"eg. 123\"\r\n              />\r\n              <br/>\r\n              <label htmlFor=\"ibu\">IBU: </label>\r\n              <input\r\n              id=\"ibu\"\r\n              type=\"text\"\r\n              value={props.ibu}\r\n              name=\"ibu\"\r\n              onChange={props.handleChange}\r\n              placeholder= \"eg. 123\"\r\n              />\r\n              <br/>\r\n            </form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={props.handleClick}>Save changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, {Component} from \"react\";\r\nimport API from \"../../utils/API\"\r\nimport Grid from \"react-bootstrap/lib/Grid\";\r\nimport Row from \"react-bootstrap/lib/Row\";\r\nimport Col from \"react-bootstrap/lib/Col\";\r\nimport ButtonToolBar from \"react-bootstrap/lib/ButtonToolbar\";\r\nimport Button from \"react-bootstrap/lib/Button\";\r\nimport {Modal} from \"../../components/Modal\"\r\nimport {Card} from \"../../components/Card\";\r\n\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    beers: [],\r\n    inStock: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadBeers();\r\n  };\r\n\r\n  // function to load all beers\r\n  loadBeers = () => {\r\n    API.getBeers()\r\n      .then(res =>\r\n        this.setState({ beers: res.data }),\r\n        console.log(this.state.beers)\r\n        )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // function to change states\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    console.log(this.state);\r\n  };\r\n\r\n  // function to add the beer to Mongo\r\n  addBeer = () => {\r\n    console.log(\"add beer function ran\")\r\n    const beerInfo = {\r\n      breweryName: this.state.breweryName,\r\n      beerName: this.state.beerName, \r\n      style: this.state.style, \r\n      ibu: this.state.ibu, \r\n      abv: this.state.abv,\r\n      inStock: true  \r\n    }\r\n    API.saveBeer(beerInfo).then(res => {\r\n        console.log(res, \"This is the response from beer info\");\r\n        if (res.status === 200) {\r\n          console.log(\"Beer succesfully added\");\r\n          this.loadBeers();\r\n        }\r\n        else {\r\n          console.log(\"There was a problem saving your beer\");\r\n        }\r\n    });\r\n  };\r\n\r\n  // function to delete a specific beer\r\n  deleteBeer = id => {\r\n    API.deleteBeer(id)\r\n      .then(res => this.loadBeers())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // function to change the instock to the opposite of the selected beer when the checkbox is clicked\r\n  toggleState = (id, instock) => {\r\n    console.log(instock + \"instock\")\r\n    if (instock === true) {\r\n      this.setState({ inStock: false });\r\n      console.log('changing state to false')\r\n      setTimeout(this.editBeer.bind(null,id), 0)\r\n    }\r\n    else {\r\n      this.setState({ inStock: true });\r\n      console.log('changing state to true')\r\n      setTimeout(this.editBeer.bind(null,id), 0)\r\n    }\r\n  };\r\n\r\n  // function to actually update the instock of the selected beer\r\n  editBeer = id => {\r\n    console.log(this.state);\r\n    console.log(\"state above\");\r\n    let data = {\r\n      '_id': id,\r\n      'inStock': this.state.inStock\r\n    }\r\n    API.updateBeer(id, data)\r\n    .then(\r\n      res => console.log(res),\r\n      console.log(\"res\"),\r\n      console.log(this.state.beers),\r\n      console.log(\"beer\"),\r\n      this.loadBeers()\r\n    )\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  // function that filters based on dropdown\r\n  filter = (event) => {\r\n    let filterVal = event.target.value;\r\n    let newBeers = this.state.beers;\r\n    console.log(filterVal)\r\n    newBeers.sort(this.dynamicSort(filterVal))\r\n    this.setState({ beers: newBeers})\r\n    console.log(this.state.beers)\r\n  };\r\n\r\n  // alphabetizes the newBeers array \r\n  dynamicSort = (property) => {\r\n    var sortOrder = 1;\r\n    if(property[0] === \"-\") {\r\n        sortOrder = -1;\r\n        property = property.substr(1);\r\n    }\r\n    return function (a,b) {\r\n        if(sortOrder === -1){\r\n            return b[property].localeCompare(a[property]);\r\n        }else{\r\n            return a[property].localeCompare(b[property]);\r\n        }        \r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <Grid>\r\n          <Row>\r\n            <Col md={7}>\r\n              <h1>Admin Page</h1> \r\n            </Col>\r\n            <Col md={5}>\r\n              <Modal \r\n                buttonName=\"Add New Beer\" \r\n                modalTitle=\"Add New Beer\"\r\n                breweryName={this.state.breweryName}\r\n                beerName={this.state.beerName}\r\n                abv={this.state.abv}\r\n                ibu={this.state.ibu}\r\n                handleChange={this.handleInputChange}\r\n                handleClick={this.addBeer}\r\n              >\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n\r\n          {this.state.beers.length ? (\r\n            <div>\r\n            {/* Headers */}\r\n            <Row>\r\n              <Col md={12}>\r\n                <Card>\r\n                  <Row>\r\n                    <Col md={1} className=\"inStock\">\r\n                      <h6>On Tap?</h6>\r\n                    </Col>\r\n                    <Col md={2} className=\"breweryName\">\r\n                      <h6>Brewery Name</h6>\r\n                    </Col>\r\n                    <Col md={2} className=\"beerName\">\r\n                      <h6>Beer Name</h6>\r\n                    </Col>\r\n                    <Col md={2} className=\"style\">\r\n                      <h6>Beer Style</h6>\r\n                    </Col>\r\n                    <Col md={1} className=\"abv\">\r\n                      <h6>ABV</h6>\r\n                    </Col>\r\n                    <Col md={2} className=\"ibu\">\r\n                      <h6>IBU</h6>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                    <select name=\"filter\" onChange={this.filter} >\r\n                      <option name= \"filter\" value=\"none\">Filter By:</option>\r\n                      <option name= \"filter\" value=\"breweryName\">Brewery Name</option>\r\n                      <option name= \"filter\" value=\"beerName\">Beer Name</option>\r\n                      <option name= \"filter\" value=\"style\">Beer Style</option>\r\n                    </select>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/* Beer Card Templates */}\r\n            <Row>\r\n                { this.state.beers.map( beer => (\r\n                  <Col md={12}>\r\n                    <Card>\r\n                      <Row>\r\n                        <Col md={1} className=\"inStock\">\r\n                          <input type=\"checkbox\" className=\"inStock\" checked={beer.inStock} onChange={() => this.toggleState(beer._id, beer.inStock)}/>\r\n                        </Col>\r\n                        <Col md={2} className=\"breweryName\">\r\n                          {beer.breweryName}\r\n                        </Col>\r\n                        <Col md={2} className=\"beerName\">\r\n                          {beer.beerName}\r\n                        </Col>\r\n                        <Col md={2} className=\"style\">\r\n                          {beer.style}\r\n                        </Col>\r\n                        <Col md={1} className=\"abv\">\r\n                          {beer.abv}\r\n                        </Col>\r\n                        <Col md={2} className=\"ibu\">\r\n                          {beer.ibu}\r\n                        </Col>\r\n                        <Col md={2}>\r\n                          <ButtonToolBar>\r\n                            <Button bsStyle=\"danger\" onClick={() => this.deleteBeer(beer._id)} >Delete</Button>\r\n                          </ButtonToolBar>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n            </Row>\r\n            </div>\r\n\r\n          ) : (\r\n            <h3> No Beers Listed -- Please click \"Add New Beer\" to begin. </h3>\r\n          )}\r\n\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Nav from \"./components/Nav\";\nimport Menu from \"./pages/menu\";\nimport Admin from \"./pages/admin\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Menu}/>\n          <Route exact path=\"/menu\" component={Menu}/>\n          <Route exact path=\"/admin\" component={Admin}/>\n        </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}